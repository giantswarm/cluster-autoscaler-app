apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cluster-autoscaler.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cluster-autoscaler.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cluster-autoscaler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cluster-autoscaler.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "cluster-autoscaler.fullname" . }}
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      {{- with .Values.node.nodeSelector }}
      {{- if and (semverCompare ">=1.24.0" $.Capabilities.KubeVersion.Version) (hasKey . "node-role.kubernetes.io/master") }}
      {{- $value := get . "node-role.kubernetes.io/master" }}
      {{- $_ := unset . "node-role.kubernetes.io/master" }}
      {{- $_ := merge . (dict "node-role.kubernetes.io/control-plane" $value) }}
      {{- else if and (semverCompare "<1.24.0" $.Capabilities.KubeVersion.Version) (hasKey . "node-role.kubernetes.io/control-plane") }}
      {{- $value := get . "node-role.kubernetes.io/control-plane" }}
      {{- $_ := unset . "node-role.kubernetes.io/control-plane" }}
      {{- $_ := merge . (dict "node-role.kubernetes.io/master" $value) }}
      {{- end }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      priorityClassName: giantswarm-critical
      containers:
      {{- $registry := .Values.isManagementCluster | ternary .Values.registry.domain .Values.image.registry }}
      {{- $cluster := .Values.isManagementCluster | ternary .Values.managementCluster.name .Values.clusterID }}
      - name: cluster-autoscaler
        image: {{ $registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        command:
        - /cluster-autoscaler
        args:
        - --v=4
        - --logtostderr=true
        - --stderrthreshold=info
        - --expander={{ .Values.configmap.expander }}
        - --cloud-provider={{ include "cloud-provider" . }}
        {{- if eq .Values.provider "aws" }}
        - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/{{ $cluster }}
        {{- else if eq .Values.provider "capa" }}
        - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,sigs.k8s.io/cluster-api-provider-aws/cluster/{{ $cluster }}
        {{- else if eq .Values.provider "azure" }}
        - --node-group-auto-discovery=label:cluster-autoscaler-enabled=true,cluster-autoscaler-name={{ $cluster }}
        {{- end }}
        - --scan-interval={{ .Values.configmap.scanInterval }}
        - --skip-nodes-with-system-pods={{ .Values.configmap.skipNodesWithSystemPods }}
        - --skip-nodes-with-local-storage={{ .Values.configmap.skipNodesWithLocalStorage }}
        - --new-pod-scale-up-delay={{ .Values.configmap.newPodScaleUpDelay }}
        - --scale-down-utilization-threshold={{ .Values.configmap.scaleDownUtilizationThreshold }}
        - --scale-down-unneeded-time={{ .Values.configmap.scaleDownUnneededTime }}
        - --balance-similar-node-groups={{ .Values.configmap.balanceSimilarNodeGroups }}
        {{- range $value := .Values.configmap.balancingIgnoreLabels }}
        - --balancing-ignore-label={{ $value }}
        {{- end }}
        {{- $_ := merge .Values.proxy .Values.cluster.proxy }}
        {{- if or (eq .Values.provider "azure") (and .Values.proxy.http .Values.proxy.https .Values.proxy.noProxy) }}
        env:
        {{- if eq .Values.provider "azure" }}
        {{- if and (not .Values.isManagementCluster) .Values.azure.subscriptionID }}
        - name: ARM_SUBSCRIPTION_ID
          value: {{ .Values.azure.subscriptionID }}
        {{- end }}
        - name: ARM_RESOURCE_GROUP
          value: {{ $cluster }}
        - name: ARM_USE_MANAGED_IDENTITY_EXTENSION
          value: {{ .Values.azure.managedIdentity | quote }}
        - name: ARM_VM_TYPE
          value: {{ .Values.azure.vmType }}
        {{- end }}
        {{- if and .Values.proxy.http .Values.proxy.https .Values.proxy.noProxy }}
        - name: http_proxy
          value: {{ .Values.proxy.http }}
        - name: HTTP_PROXY
          value: {{ .Values.proxy.http }}
        - name: https_proxy
          value: {{ .Values.proxy.https }}
        - name: HTTPS_PROXY
          value: {{ .Values.proxy.https }}
        - name: no_proxy
          value: {{ .Values.proxy.noProxy }}
        - name: NO_PROXY
          value: {{ .Values.proxy.noProxy }}
        {{- end }}
        {{- end }}
        ports:
        - name: metrics
          protocol: TCP
          containerPort: 8085
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: ssl-certs
          mountPath: /etc/ssl/certs/ca-certificates.crt
          readOnly: true
      volumes:
      - name: ssl-certs
        hostPath:
          path: {{ .Values.node.caBundlePath }}
