serviceAccount:
  # -- Annotations of the service account.
  annotations: {}

image:
  # -- Registry host to pull images from.
  # This value is set automatically. Do not overwrite it.
  registry: gsoci.azurecr.io
  # -- Image name.
  name: giantswarm/cluster-autoscaler
  # -- Image tag.
  tag: v1.30.4

# -- Container security context.
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

configmap:
  # -- Type of node group expander to be used in scale up. Available values:
  #
  # - random: Selects a node group at random.
  # - most-pods: Selects a node group that fits the most pods.
  # - least-waste: Selects a node group that leaves the least fraction of CPU and Memory.
  # - price: Selects a node group that is the most cost-effective and consistent with the preferred node size for the cluster.
  # - priority: Selects a node group based on a user-configured priorities assigned to group names.
  # - grpc: Uses the gRPC client expander to call to an external gRPC server to select a node group for scale up.
  #
  # Specifying multiple values separated by commas will call the expanders in succession until there is only one option remaining.
  # Ties still existing after this process are broken randomly.
  expander: least-waste
  # -- How often cluster is reevaluated for scale up or down.
  scanInterval: 30s
  # -- If true cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods).
  skipNodesWithSystemPods: "true"
  # -- If true cluster autoscaler will never delete nodes with pods with local storage, e.g. EmptyDir or HostPath.
  skipNodesWithLocalStorage: "false"
  # -- Pods less than this old will not be considered for scale-up.
  # Can be increased for individual pods through annotation 'cluster-autoscaler.kubernetes.io/pod-scale-up-delay'.
  newPodScaleUpDelay: 0s
  # -- The maximum value between the sum of cpu requests and sum of memory requests of all pods running on the node
  # divided by node's corresponding allocatable resource, below which a node can be considered for scale down.
  # Keep https://github.com/giantswarm/docs/blob/main/src/layouts/shortcodes/autoscaler_utilization_threshold.html updated.
  scaleDownUtilizationThreshold: 0.7
  # -- How long a node should be unneeded before it is eligible for scale down.
  scaleDownUnneededTime: 5m0s
  # -- Detect similar node groups and balance the number of nodes between them.
  balanceSimilarNodeGroups: "true"
  # -- Specifies a label to ignore in addition to the basic and cloud-provider set of labels when comparing if two node groups are similar.
  balancingIgnoreLabels:
  - ip
  - vpc.amazonaws.com/eniConfig
  - giantswarm.io/machine-deployment

  # -- Taints that are added to new nodes during node initialization.
  # Cluster Autoscaler treats nodes tainted with startup taints as unready, but taken into account during scale up logic, assuming they will become ready shortly.
  # See: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-treat-nodes-with-statusstartupignore-taints
  nodeStartupTaints:
  - node.cluster.x-k8s.io/uninitialized

azure:
  # -- ID of the subscription the VMSSs are contained in.
  subscriptionID: ""
  # -- If the VMSS instances' managed identity should be used or not.
  managedIdentity: true
  # -- Azure VM type.
  vmType: VMSS

# -- Container resource requests and limits.
resources:
  requests:
    cpu: 50m
    memory: 100Mi
  limits:
    memory: 400Mi

node:
  # -- Node selector for the autoscaler pod.
  # `control-plane` gets translated to `master` and vice versa depending on Kubernetes version.
  nodeSelector:
    node-role.kubernetes.io/control-plane: ""
  # -- Host path of the CA bundle.
  caBundlePath: /etc/ssl/certs/ca-certificates.crt

autoscaling:
  # -- Lower bounds for vertical autoscaling.
  minAllowed:
    cpu: 50m
    memory: 100Mi

podMonitor:
  # -- Add extra labels to the PodMonitor resource
  additionalLabels: {}

# Below are configuration values that you should not overwrite or set yourself.

# -- Provider the cluster is running on.
# This value is set automatically. Do not overwrite it.
provider: aws

# -- If the chart is installed on a management cluster or not.
# This value is set automatically. Do not overwrite it.
isManagementCluster: false
# -- Name of the management cluster this chart is installed on.
# This value is set automatically. Do not overwrite it.
managementCluster: sc4l3

# -- Cluster ID.
# This value is set automatically. Do not overwrite it.
clusterID: sc4l3

registry:
  # -- Registry host to pull images from.
  # This value is set automatically. Do not overwrite it.
  domain: gsoci.azurecr.io

cluster:
  # -- Global proxy settings.
  # This value is set automatically. Do not overwrite it.
  proxy:
    http: ""
    https: ""
    noProxy: ""

# -- Local proxy settings. Overrides global proxy settings.
# This value is set automatically. Do not overwrite it.
proxy:
  http: ""
  https: ""
  noProxy: ""

global:
  podSecurityStandards:
    # -- If Pod Security Standards are being used or not.
    # This value is set automatically. Do not overwrite it.
    enforced: true
